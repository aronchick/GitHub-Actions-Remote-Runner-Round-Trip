# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
      
    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    # - name: Debugging with tmate
    #   uses: mxschmitt/action-tmate@v2

    - name: Run VM Creation Script
      id: vm_create
      run: |
        pipenv install
        ssh-keygen -b 2048 -t rsa -f /tmp/sshkey -q -N ""
        pipenv run python3 create_vm.py

    - name: Push script and run on runner
      id: run_on_runner
      run: |
        scp -i /tmp/sshkey -o StrictHostKeyChecking=no do_work_on_runner.py ${{ steps.vm_create.outputs.USERNAME}}@${{steps.vm_create.outputs.IP_ADDRESS}}:do_work_on_runner.py
        ssh -i /tmp/sshkey -o StrictHostKeyChecking=no ${{steps.vm_create.outputs.USERNAME}}@${{steps.vm_create.outputs.IP_ADDRESS}} 'python3 do_work_on_runner.py ${{secrets.GH_ACTION_TOKEN}} ${{steps.vm_create.outputs.RUN_ID}} &'
